//הגדרת הפינים ללידים רמקול וכפתורים
#define pinLedGreen 4
#define pinLedYellow 3
#define pinLedRed 2

#define pinBtnGreen 7
#define pinBtnYellow 5
#define pinBtnRed 8

#define pinBuzzer 12  // Define the buzzer pin

#define WAIT_FOR_NEW_SEQUENCE 31
#define SEQUENCE_IS_ON        32
#define SEQUENCE_OVER         33
int CurrState;

unsigned long LastToggleTime;
int ToggleInterval;
int CurrLed;
int MaxToggles = 10;
int toggleCnt = 0;

// הגדרת תחילת משחק שזה לדים נדלקים רנדומלי ל 3 שניות
void wait_to_start() {
  delay(random(1000, 3000));
  CurrState = SEQUENCE_IS_ON;
  toggleCnt = 0;
  LastToggleTime = millis();
  ToggleInterval = random(500, 2001); // השהיה ראנדומלית בין שניה ל 3 שניות
}
void loop() {
  switch(CurrState) {
    case WAIT_FOR_NEW_SEQUENCE: wait_to_start(); break;
    case SEQUENCE_IS_ON       : sequence_on();   break;
    case SEQUENCE_OVER        : sequence_over(); break;
  }
}
// הגדרת השהייה לתחילת משחק
void wait_to_start() {
  // Wait for a random duration between 1 to 3 seconds before starting the sequence
  delay(random(1000, 3000));
  CurrState = SEQUENCE_IS_ON;
  toggleCnt = 0;
  LastToggleTime = millis();
}
//הגדרת משחק רץ , בודק איזה לד מאיר ואיזה כפתור נלחץ ולפי זה מפעיל צפצוף אם הם תואמים או לא
void sequence_on() {
  if (toggleCnt < MaxToggles) {
    if (millis() - LastToggleTime > random(500, 2001)) { // Directly calculate the interval here
      turnOffAllLeds();
      CurrLed = random(1, 4); // Randomly choose an LED (1 = Green, 2 = Yellow, 3 = Red)
      turnOnLed(CurrLed);
      LastToggleTime = millis();
      toggleCnt++;

      delay(500);  // Wait for 0.5 seconds

      playInitialTune();  // Play a tune before any button is pressed

      // Check if the corresponding button is pressed
      if (isButtonPressed(CurrLed)) {
        // Correct button pressed
        playCorrectTune();  // Play the correct tune
        Serial.println("Correct button pressed!");
      } else if (isAnyButtonPressed()) {
        // Wrong button pressed
        playIncorrectTune();  // Play the incorrect tune
        Serial.println("Wrong button pressed.");
      }
    }
  } else {
    CurrState = SEQUENCE_OVER;
  }
}
