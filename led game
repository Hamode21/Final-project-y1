#include <pitches.h>

#define pinLedGreen 4
#define pinLedYellow 3
#define pinLedRed 2
#define pinLedBlue 12

#define pinBtnGreen 10
#define pinBtnYellow 6
#define pinBtnRed 11
#define pinBtnBlue 9 

#define pinBuzzer 5

int score = 0; 
void setup() {
  pinMode(pinLedGreen, OUTPUT);
  pinMode(pinLedYellow, OUTPUT);
  pinMode(pinLedRed, OUTPUT);
  pinMode(pinLedBlue, OUTPUT); 

  pinMode(pinBtnGreen, INPUT_PULLUP);
  pinMode(pinBtnYellow, INPUT_PULLUP);
  pinMode(pinBtnRed, INPUT_PULLUP);
  pinMode(pinBtnBlue, INPUT_PULLUP); 

  pinMode(pinBuzzer, OUTPUT);
  
  randomSeed(analogRead(A0));
  Serial.begin(9600); 
}
void loop() {
  digitalWrite(pinLedGreen, LOW);
  digitalWrite(pinLedYellow, LOW);
  digitalWrite(pinLedRed, LOW);
  digitalWrite(pinLedBlue, LOW); 
  int ledOrder[4] = {pinLedGreen, pinLedYellow, pinLedRed, pinLedBlue};
  int selectedLeds[3]; 
  
  for (int i = 0; i < 4; i++) {
    int j = random(0, 4); 
    int temp = ledOrder[i];
    ledOrder[i] = ledOrder[j];
    ledOrder[j] = temp;
  }

  for (int i = 0; i < 3; i++) {
    selectedLeds[i] = ledOrder[i];
  }

  for (int i = 0; i < 3; i++) {
    digitalWrite(selectedLeds[i], HIGH); 
  }
  
  delay(1000); 

  for (int i = 0; i < 3; i++) {
    digitalWrite(selectedLeds[i], LOW); 
  }

  tone(pinBuzzer, NOTE_G4, 500);  
  delay(500); 
  game();
}

void game() {    //הגדרת המשחק כללית
  score = 0; 
  for (int i = 0; i < 3; i++) { 
    digitalWrite(pinLedGreen, LOW);
    digitalWrite(pinLedYellow, LOW);
    digitalWrite(pinLedRed, LOW);
    digitalWrite(pinLedBlue, LOW); 

    int ledToLight = random(1, 5); 

    switch (ledToLight) {
      case 1:
        digitalWrite(pinLedGreen, HIGH);
        break;
      case 2:
        digitalWrite(pinLedYellow, HIGH);
        break;
      case 3:
        digitalWrite(pinLedRed, HIGH);
        break;
      case 4:
        digitalWrite(pinLedBlue, HIGH); 
        break;
    }
   unsigned long startTime = millis(); 
    bool correctButtonPressed = false;
    bool buttonPressed = false;

    while (millis() - startTime < 1000) { 
      if (digitalRead(pinBtnGreen) == LOW && ledToLight == 1) {
        correctButtonPressed = true;
        buttonPressed = true;
        score++; 
        break;
      } else if (digitalRead(pinBtnYellow) == LOW && ledToLight == 2) {
        correctButtonPressed = true;
        buttonPressed = true;
        score++; 
        break;
      } else if (digitalRead(pinBtnRed) == LOW && ledToLight == 3) {
        correctButtonPressed = true;
        buttonPressed = true;
        score++; 
        break;
      } else if (digitalRead(pinBtnBlue) == LOW && ledToLight == 4) {
        correctButtonPressed = true;
        buttonPressed = true;
        score++; 
        break;
      } else if ((digitalRead(pinBtnGreen) == LOW && ledToLight != 1) ||
                 (digitalRead(pinBtnYellow) == LOW && ledToLight != 2) ||
                 (digitalRead(pinBtnRed) == LOW && ledToLight != 3) ||
                 (digitalRead(pinBtnBlue) == LOW && ledToLight != 4)) {
        buttonPressed = true;
        break;
      }
    }
 digitalWrite(ledToLight, LOW); 

    if (!buttonPressed || (correctButtonPressed && millis() - startTime >= 1000) || !correctButtonPressed) {
      tone(pinBuzzer, NOTE_C4, 500);  // Play NOTE_C4 for failure
      digitalWrite(pinLedRed, HIGH); 
      delay(500); 
      digitalWrite(pinLedRed, LOW); 
    } else if (correctButtonPressed && millis() - startTime < 1000) {
      tone(pinBuzzer, NOTE_A4, 500);  // Play NOTE_A4 for success
      digitalWrite(pinLedGreen, HIGH); 
      delay(500); 
      digitalWrite(pinLedGreen, LOW); 
    }

    delay(500); 
  }
 showResult();
}

void showResult() {
  digitalWrite(pinLedGreen, LOW);
  digitalWrite(pinLedYellow, LOW);
  digitalWrite(pinLedRed, LOW);
  digitalWrite(pinLedBlue, LOW); 

  if (score == 0) {
    Serial.println("נכשל!");
    digitalWrite(pinLedRed, HIGH); 
  } else {
    Serial.print("הצלחה! נקודות: ");
    Serial.println(score);
    digitalWrite(pinLedGreen, HIGH); 
  }

  delay(2000); 
 gameOver(); 
}

void gameOver() {
  while (true) {
    if (digitalRead(pinBtnGreen) == LOW || digitalRead(pinBtnYellow) == LOW || digitalRead(pinBtnRed) == LOW || digitalRead(pinBtnBlue) == LOW) {
      score = 0; 
      loop(); 
    }
  }
}

